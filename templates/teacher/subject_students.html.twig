{% extends 'base.html.twig' %}

{% block title %}Студенты по предмету: {{ subject.name }}{% endblock %}

{% block body %}
    <h1>Оценки студентов по предмету: {{ subject.name }}</h1>
    <ul>
        {% for student in students %}
            <li>
                {{ student.email }} | 
                Оценки: 
                {% if studentGrades[student.id] is not empty %}
                    {{ studentGrades[student.id]|join(', ') }}
                {% else %}
                    Нет оценок
                {% endif %} | 
                <form data-student-id="{{ student.id }}" data-subject-id="{{ subject.id }}" class="grade-form" style="display: inline;">
                    <input type="number" name="grade" min="1" max="5" required placeholder="Оценка">
                    <button type="submit">Добавить</button>
                </form>
            </li>
        {% else %}
            <li>Студентов нет.</li>
        {% endfor %}
    </ul>

    <script>
        document.querySelectorAll('.grade-form').forEach(form => {
            form.addEventListener('submit', async (event) => {
                event.preventDefault();
                const studentId = form.dataset.studentId;
                const subjectId = form.dataset.subjectId;
                const grade = form.querySelector('input[name="grade"]').value;

                const response = await fetch('{{ path('teacher_grade_create') }}', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ studentId, subjectId, grade }),
                });

                const result = await response.json();
                if (result.success) {
                    alert('Оценка успешно добавлена!');
                    location.reload(); // Перезагрузить страницу, чтобы увидеть обновленный список оценок
                } else {
                    alert('Ошибка: ' + result.error);
                }
            });
        });
    </script>
{% endblock %}
