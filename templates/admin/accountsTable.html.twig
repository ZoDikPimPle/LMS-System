{% extends 'base.html.twig' %}

{% block title %}Users Table{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1>Пользователи</h1>
        <table id="usersTable" class="table table-striped w-100">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Email</th>
                    <th>Роли</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                <!-- Данные будут загружаться через AJAX -->
            </tbody>
        </table>
    </div>

    <!-- Кнопка добавления -->
<div class="mt-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">Добавить нового пользователя</button>
</div>

    <!-- Всплывающее окно -->
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addUserModalLabel">Добавить нового пользователя</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <form id="addUserForm">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Пароль</label>
                            <input type="password" class="form-control" id="password" name="password" minlength="8" required>
                        </div>
                        <div class="mb-3">
                            <label for="role" class="form-label">Роль</label>
                            <select class="form-select" id="role" name="role" required>
                                <option value="">Выберите роль</option>
                                <option value="ROLE_ADMIN">Администратор</option>
                                <option value="ROLE_TEACHER">Учитель</option>
                                <option value="ROLE_STUDENT">Студент</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Сохранить</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

<script>
    // Объявляем переменную table в глобальной области видимости
    let table;

    document.addEventListener('DOMContentLoaded', function () {
        // Инициализация DataTable
        table = $('#usersTable').DataTable({
            ajax: {
                url: '{{ path("admin_users_data") }}',
                dataSrc: '',
            },
            columns: [
                { data: 'id' },
                { 
                    data: 'email',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            return `<span class="editable" data-field="email" data-id="${row.id}">${data}</span>`;
                        }
                        return data;
                    }
                },
                { 
                    data: 'roles',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            return `<span class="editable" data-field="roles" data-id="${row.id}">${data}</span>`;
                        }
                        return data;
                    }
                },
                // Добавляем запятую здесь
                {
                    data: null, 
                    orderable: false,
                    searchable: false,
                    render: function(data, type, row) {
                        return `<button class="btn btn-danger btn-sm delete-user" data-id="${row.id}">Удалить</button>`;
                    }
                }
            ]

        });

        // Обработчик клика на кнопке удаления
            $('#usersTable').on('click', '.delete-user', function () {
                const userId = $(this).data('id');
                const confirmDelete = confirm('Вы уверены, что хотите удалить этого пользователя?');

                if (confirmDelete) {
                    $.ajax({
                        url: '{{ path("admin_users_delete") }}',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ id: userId }),
                        success: function () {
                            alert('Пользователь успешно удалён');
                            table.ajax.reload(); // Перезагрузка таблицы
                        },
                        error: function () {
                            alert('Ошибка при удалении пользователя. Попробуйте снова.');
                        }
                    });
                }
            });


        // Обработчик клика на редактируемые ячейки
        $('#usersTable').on('click', '.editable', function () {
            const span = $(this);
            const originalValue = span.text();
            const field = span.data('field');
            const id = span.data('id');

            // Создаем input для редактирования
            const input = $(`<input type="text" class="form-control" value="${originalValue}">`);
            span.replaceWith(input);
            input.focus();

            input.on('blur', function () {
                const newValue = input.val();

                if (newValue !== originalValue) 
                {
                    $.ajax({
                        url: '{{ path('admin_users_update') }}',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ id, field, value: newValue }),
                        success: function () {
                            table.ajax.reload(); // Перезагрузка данных таблицы после успешного обновления
                        },
                        error: function () {
                            alert('Error updating field. Please try again.');
                            input.replaceWith(`<span class="editable" data-field="${field}" data-id="${id}">${originalValue}</span>`);
                        }
                    });
                } else {
                    input.replaceWith(`<span class="editable" data-field="${field}" data-id="${id}">${originalValue}</span>`);
                }
            });
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const addUserForm = document.getElementById('addUserForm');

        addUserForm.addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(addUserForm);

            fetch('{{ path("admin_add_user") }}', {
                method: 'POST',
                body: JSON.stringify({
                    email: formData.get('email'),
                    password: formData.get('password'),
                    role: formData.get('role'),
                }),
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Ошибка при добавлении пользователя');
                    }
                    return response.json();
                })
                .then(data => {
                    alert('Пользователь успешно добавлен!');
                    $('#addUserModal').modal('hide');
                    if (table) {
                        table.ajax.reload(); // Обновляем таблицу
                    }
                })
                .catch(error => {
                    alert('Ошибка: ' + error.message);
                });
        });
    });
</script>





{% endblock %}
